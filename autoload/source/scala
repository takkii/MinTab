+
+=
+=:
++
++:
++=
++=:
+:
:+
-
-=
--
--=
&
|
&~
/:
/:\
:\
add
addString
aggregate
apply
applyOrElse
clear
clone
collect
collectFirst
combinations
companion
contains
containsSlice
copyToArray
copyToBuffer
corresponds
count
diff
distinct
drop
dropRight
dropWhile
empty
endsWith
exists
filter
filterNot
filterKeys
find
findIndexOf
findLastIndexOf
flatMap
flatten
fold
foldLeft
foldRight
forall
foreach
get
getOrElse
getOrElseUpdate
groupBy
grouped
hasDefiniteSize
head
headOption
indexOf
indexOfSlice
indexWhere
indices
init
inits
insert
insertAll
intersect
isDefinedAt
isEmpty
isTraversableAgain
iterator
keys
keysIterator
keySet
last
lastIndexOf
lastIndexOfSlice
lastIndexWhere
lastOption
length
lengthCompare
map
mapValues
max
maxBy
min
minBy
mkString
nonEmpty
padTo
par
partition
patch
permutations
prefixLength
product
put
reduce
reduceLeft
reduceLeftOption
reduceOption
reduceRight
reduceRightOption
remove
retain
reverse
reverseIterator
reverseMap
runWith
sameElements
scan
scanLeft
scanRight
segmentLength
seq
size
slice
sliding
sortBy
sorted
sortWith
span
splitAt
startsWith
stringPrefix
subsetOf
sum
tail
tails
take
takeRight
takeWhile
to
toArray
toBuffer
toIndexedSeq
toIterable
toIterator
toList
toMap
toSeq
toSet
toStream
toString
toTraversable
toVector
transform
transpose
trimEnd
trimStart
union
unzip
unzip3
update
updated
values
valuesIterator
view
withFilter
zip
zipAll
zipWithIndex